spark {
  spark.app.name = "Bronze"
  spark.executor.instances = 2
  spark.executor.cores = 1
  spark.executor.memory = "1g"

}

input {
  hdfs {
    result_table_name = "iris_origin"
    path = "hdfs://node02:9000/ml/lr_data/iris.csv"
    format = "csv"
  }
}

transform {
  schema {
    fields = "calyxLength:Double,calyxWidth:Double,petalLength:Double,petalWidth:Double,classification:String"
    result_table_name = "iris"
  }

  stringIndexer {
    inputCol = "classification"
    outputCol = "category"
    handleInvalid = "error"
  }

  labeledPoint {
    label = "category"
    features = "calyxLength,calyxWidth,petalLength,petalWidth"
  }

  split {
    weights = "0.7,0.3"
  }
}

train {
  logisticRegressionClassifier {
    labelCol = "label"
    featuresCol = "features"
    family = "multinomial"
    regParam = 0.0
    elasticNetParam = 0.0
    maxIter = 100
    tol = 1E-6
  }
}

model {
  saveModel {
    path = "hdfs://node02:9000/ml/model/iris"
  }
}

validate {
  binaryClassificationValidate {
    modelType = "logisticRegression"
  }
}

output {
  stdout {
    limit= 100
  }
}
